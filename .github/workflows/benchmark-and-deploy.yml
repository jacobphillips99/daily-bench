name: Daily Benchmark and Deploy

on:
  schedule:
    # Run daily at 6am PT (14:00 UTC) (fixme, todo)
    - cron: '0 14 * * *'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      run_benchmark:
        description: 'Run benchmark before deploying'
        required: false
        default: true
        type: boolean
      deploy_only:
        description: 'Deploy existing results without benchmarking'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  benchmark:
    runs-on: ubuntu-latest
    # Only run benchmark if not deploy-only mode
    if: ${{ !inputs.deploy_only && (github.event_name == 'schedule' || inputs.run_benchmark) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: uv sync --locked
    
    - name: Run daily-bench benchmark
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "Running daily-bench benchmark..."
        uv run daily-bench run
    
    - name: Extract benchmark results
      run: |
        echo "Extracting benchmark results..."
        uv run daily-bench extract
    
    - name: Upload benchmark artifacts
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: |
          results/
          dashboard/
        retention-days: 30
    
    - name: Commit and push results
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
        # Add any new result files
        git add results/ dashboard/benchmark_summary.csv || true
        
        # Only commit if there are changes
        if ! git diff --staged --quiet; then
          git commit -m "Update benchmark results - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          git push
        else
          echo "No changes to commit"
        fi

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # Deploy runs after benchmark (if benchmark ran) or independently
    needs: [benchmark]
    if: always() && (needs.benchmark.result == 'success' || needs.benchmark.result == 'skipped')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Download artifacts if benchmark ran in this workflow
    - name: Download benchmark artifacts
      if: needs.benchmark.result == 'success'
      uses: actions/download-artifact@v4
      with:
        name: benchmark-results
        path: .
    
    # For deploy-only mode, use existing files from repo
    - name: Use existing dashboard files
      if: needs.benchmark.result == 'skipped'
      run: |
        echo "Using existing dashboard files from repository"
        ls -la dashboard/ || echo "No dashboard directory found"
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dashboard'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 
name: Daily Benchmark and Deploy

on:
  schedule:
    # Run every 6 hours at 10am, 4pm, 10pm, 4am PT (00:00, 06:00, 12:00, 18:00 UTC)
    - cron: '0 0,6,12,18 * * *'
    # for testing
    # - cron: '0 15 * * *'
  # Run deploy-only on push to main branch
  push:
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      run_benchmark:
        description: 'Run benchmark before deploying'
        required: false
        default: true
        type: boolean
      deploy_only:
        description: 'Deploy existing results without benchmarking'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  benchmark:
    runs-on: ubuntu-latest
    # Only run benchmark if not deploy-only mode AND not a push event
    if: ${{ !inputs.deploy_only && github.event_name != 'push' && (github.event_name == 'schedule' || inputs.run_benchmark) }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Random delay for cron triggers
      # random delay over 6 hours to test different times of day
      if: github.event_name == 'schedule'
      run: |
        SLEEP_TIME=$((RANDOM % 21601))
        echo "Sleeping for $SLEEP_TIME seconds for daily-bench jitter..."
        sleep $SLEEP_TIME

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --locked

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Verify Google Cloud authentication
      run: |
        echo "Checking gcloud authentication status..."
        gcloud auth list
        echo "Current gcloud configuration:"
        gcloud config list
        echo "Current project: $(gcloud config get-value project)"
        echo "Authenticated account can access project: $(gcloud projects describe ${{ secrets.GOOGLE_CLOUD_PROJECT }} --format='value(projectId)' 2>/dev/null || echo 'FAILED')"

    - name: Run daily-bench benchmark
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        GCLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        GOOGLE_CLOUD_REGION: "us-central1"
      run: |
        echo "Running daily-bench benchmark..."
        uv run daily-bench run

    - name: Extract benchmark results
      run: |
        echo "Extracting benchmark results..."
        uv run daily-bench extract

        # Copy results CSV to dashboard for deployment
        if [ -f "results/benchmark_summary.csv" ]; then
          echo "Copying benchmark_summary.csv to dashboard/"
          mkdir -p dashboard
          cp results/benchmark_summary.csv dashboard/
        else
          echo "No benchmark_summary.csv found in results/"
        fi

    - name: Upload benchmark artifacts
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: |
          results/
          dashboard/
        retention-days: 30

    - name: Commit and push results
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

        # Add any new result files (dashboard/ files are ignored by gitignore)
        git add results/ || true

        # Only commit if there are changes
        if ! git diff --staged --quiet; then
          git commit -m "Update benchmark results - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          git push
        else
          echo "No changes to commit"
        fi

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # Deploy runs after benchmark (if benchmark ran) or independently
    needs: [benchmark]
    if: always() && (needs.benchmark.result == 'success' || needs.benchmark.result == 'skipped')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Download artifacts if benchmark ran in this workflow
    - name: Download benchmark artifacts
      if: needs.benchmark.result == 'success'
      uses: actions/download-artifact@v4
      with:
        name: benchmark-results
        path: .

    # For deploy-only mode, use existing files from repo
    - name: Use existing dashboard files
      if: needs.benchmark.result == 'skipped'
      run: |
        echo "Using existing dashboard files from repository"
        ls -la dashboard/ || echo "No dashboard directory found"

        # Copy benchmark_summary.csv from results/ to dashboard/ if it exists
        if [ -f "results/benchmark_summary.csv" ]; then
          echo "Copying benchmark_summary.csv from results/ to dashboard/"
          cp results/benchmark_summary.csv dashboard/
        else
          echo "No benchmark_summary.csv found in results/ directory"
        fi

        # Show what's in dashboard after copying
        echo "Dashboard contents after copying:"
        ls -la dashboard/ || echo "No dashboard directory found"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dashboard'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
